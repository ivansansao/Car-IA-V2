class Genetic {

    constructor() {
        this.gotCloserBest = 0;
        this.recordCloser = 0;
        this.quantidade = 4;
        this.shapes = '';
        this.melhor = null;
        this.melhorCorrente = null;
        this.melhores = [];
        this.pesos = [];
        this.currentSons = [];
        this.shapes = '13,5;5;5,9;9';
        // this.shapes = '22,8;8;8,9;9';

        // Sem pista.
        this.pesos.push('');

        // Pista 1
        this.pesos.push('1.3229777812957764,4.826473236083984,-0.8663735389709473,-0.05608475208282471,-0.3732193112373352,1.5351650714874268,0.0001945684925885871,1.0626245737075806,0.08819231390953064,2.9974253177642822,2.2220585346221924,1.494494080543518,-0.9475225806236267,2.253314733505249,-1.678873896598816,1.9592889547348022,-0.5486811995506287,-0.13610967993736267,0.16486762464046478,-0.8290215730667114,-1.5775628089904785,-0.011424906551837921,-0.643483579158783,-0.007668179925531149,0.05484018474817276,1.3560556173324585,0.02587611973285675,-0.1117280125617981,-1.3013806343078613,-0.47171059250831604,-1.518649935722351,-1.249305248260498,1.3274797201156616,-0.17575106024742126,1.3329956531524658,-0.3010208308696747,-0.3130420446395874,0.8817152976989746,-0.68528813123703,-0.07434539496898651,1.3171517848968506,-3.632964849472046,-0.3898075819015503,0.9846222996711731,1.1739628314971924,1.906591534614563,-2.862673282623291,-1.182587742805481,-1.9415663480758667,0.43917664885520935,-0.20326019823551178,-0.6635982990264893,-0.5990214943885803,0.6064013838768005,0.5514600872993469,-0.6314815878868103,0.6531809568405151,-0.6161296367645264,1.0339791774749756,-0.5686401724815369,-0.7976335883140564,0.14441359043121338,-0.5498229265213013,-1.3016630411148071,0.4780113399028778,-0.7689017653465271,-0.31420406699180603,-0.942568302154541,-0.4991925358772278,-0.9004267454147339,-0.31844112277030945,1.4567961692810059,-0.18337221443653107,-0.08408510684967041,-1.3020371198654175,-1.013727068901062,0.9276162981987,1.3076540231704712,-0.18002849817276,-1.471369743347168,2.4226436614990234,-0.4420604407787323,0.2857683300971985,-0.8483598828315735,0.378024160861969,0.1259065717458725,-0.573183536529541,-0.06688317656517029,1.5367321968078613,-0.6274488568305969,-0.27774274349212646,-0.218927264213562,1.145168423652649,-1.5916016101837158,1.221480131149292,0.29551073908805847,-0.6916189789772034,-0.39176493883132935,0.2783479690551758,0.24995635449886322,0.2001747339963913,1.5374153852462769,0.38834887742996216,-0.4023599922657013,-1.3814947605133057,-2.819403886795044,0.24254700541496277,-0.3465447723865509,0.16688817739486694,-0.7166265845298767,-0.7392983436584473,0.23599018156528473,0.4464564025402069,-1.8506015539169312,-1.4012994766235352,-3.299773693084717,0.3294631242752075,-0.6051691174507141,-0.4160268306732178,1.480445146560669,1.4750630855560303,-0.5530824065208435,0.779869019985199,0.7974951863288879,-0.17255575954914093,0.519158124923706,-0.07809162884950638,-0.43975257873535156,2.092372179031372,-0.0019449125975370407,-0.09493837505578995,-1.62615168094635,0.7114719152450562,-0.8036648631095886,2.077723741531372,1.5111457109451294,0.9114229083061218,0.5320845246315002,-2.500896453857422,1.0190558433532715,-0.35753679275512695,-0.1977338194847107,-0.6200626492500305,0.4523347020149231,0.10369447618722916,1.6845771074295044,-1.5457804203033447,0.4363076090812683,1.1765552759170532,-0.7257341742515564,1.7676465511322021,-1.492690086364746,1.3063876628875732,-1.462575912475586,-0.0684361532330513,0.4428396224975586,-0.4763801395893097,-1.1656430959701538,1.9146337509155273,-1.5892010927200317,-2.345355749130249,-0.002752932719886303,-1.1286299228668213,0.4432060420513153,0.28514131903648376,-0.15610714256763458,-0.16336454451084137,-0.3532671630382538,-2.2148396968841553,0.09437154233455658,-0.2757589817047119,1.582937479019165,0.30145445466041565,-3.529001474380493,0.7768625020980835,0.8150380253791809;2.0275702476501465,-3.7548093795776367,-1.2453668117523193,-1.8621301651000977,-1.964774250984192,3.291438579559326,3.1978204250335693,-0.7012357711791992;-1.8022370338439941,-4.639881134033203,-0.23999187350273132,0.9380024671554565,-5.422342300415039,-16.510892868041992,-0.5236417055130005,2.749035120010376,-0.40915828943252563,-0.9113988280296326,3.360867500305176,-0.46589282155036926,11.749585151672363,12.889107704162598,-3.881571054458618,0.09447804093360901,7.506175518035889,1.9484487771987915,0.09166659414768219,-4.140368461608887,-0.5642883777618408,3.4771382808685303,1.119403600692749,-15.838191986083984,0.8805463910102844,-2.154501438140869,-2.983337879180908,-1.6275745630264282,0.5295390486717224,1.060189962387085,-2.352689504623413,-2.785656213760376,10.200949668884277,0.31764084100723267,2.301093101501465,-0.07951429486274719,-0.38571521639823914,-3.623387098312378,0.6164482235908508,0.810843288898468,1.8466057777404785,-2.789341449737549,-1.248551845550537,2.5090394020080566,-0.5718217492103577,-0.36232954263687134,3.605583429336548,-0.5260023474693298,1.8136345148086548,1.9016613960266113,14.743078231811523,2.183363914489746,-0.16566714644432068,-2.2354559898376465,0.2810032367706299,-2.014021873474121,0.31777289509773254,6.917752265930176,11.726842880249023,0.033895883709192276,0.08319546282291412,0.6990463733673096,1.8950269222259521,0.2770864963531494,1.7267019748687744,0.5708152055740356,0.457409530878067,9.643030166625977,-3.52386736869812,-2.4011194705963135,18.563884735107422,0.22922012209892273;-5.427530765533447,-6.194295406341553,-1.5381137132644653,5.834606170654297,19.142086029052734,0.19281472265720367,1.2178304195404053,-2.755462169647217,1.0722932815551758');

        // Pista 2
        this.pesos.push('-2.4192075729370117,8.182243347167969,0.5442622900009155,-6.140575408935547,0.4206228256225586,2.7349050045013428,4.630753517150879,-0.6961246728897095,-7.064025402069092,-3.615494966506958,5.327238082885742,8.21973991394043,12.160561561584473,6.434757709503174,3.8161814212799072,-9.83089542388916,0.8075110912322998,-1.799641489982605,-2.2885003089904785,3.279257297515869,-0.538351833820343,-2.4368999004364014,-2.9236724376678467,-0.8597813844680786,2.6236801147460938,-1.5598013401031494,-0.207014799118042,-3.706418514251709,-0.6826674938201904,-1.754015564918518,-1.173404335975647,3.268315553665161,1.7201176881790161,-1.8787360191345215,0.2887868285179138,-1.5907528400421143,4.183285713195801,-2.5443835258483887,0.2951774299144745,-1.356708288192749,0.7968617677688599,-1.0559546947479248,2.030855417251587,1.6894570589065552,5.86276912689209,1.3819571733474731,-0.40822672843933105,1.4084171056747437,3.389523506164551,0.2756412625312805,-4.597484111785889,5.026951313018799,-2.6440727710723877,2.1333396434783936,-0.7020979523658752,4.02582311630249,0.7193115949630737,-1.114093542098999,2.882164478302002,-0.46436429023742676,4.365649700164795,-3.64459228515625,-0.5398236513137817,-0.104686439037323,-0.10365145653486252,0.37523749470710754,-1.0363348722457886,-2.230616807937622,-6.446892738342285,3.006122589111328,2.2769572734832764,2.4815313816070557,-1.8639678955078125,2.1212069988250732,-2.141017436981201,-1.0317680835723877,2.2875654697418213,-4.664955139160156,4.615339279174805,-2.1570091247558594,-2.0857930183410645,0.6297704577445984,-2.2249131202697754,0.9029141068458557,2.806877851486206,-1.7808696031570435,-0.014595190063118935,1.2778747081756592,0.7978623509407043,0.16915617883205414,-2.070997476577759,1.408298134803772,2.0987308025360107,0.4597729742527008,-1.0191364288330078,-3.2658371925354004,-1.1492551565170288,-0.05397077649831772,-1.3401035070419312,-4.6000075340271,-1.568723201751709,-0.18402762711048126,1.7192434072494507,0.5124384760856628,1.4119502305984497,0.8926913142204285,-2.2706472873687744,-0.30392882227897644,2.792546272277832,0.18334494531154633,4.394244194030762,-3.6284313201904297,-1.3406952619552612,0.5560107827186584,-0.20066656172275543,-3.440345525741577,-0.5925673246383667,-1.3029134273529053,-0.42705824971199036,0.6543610095977783,1.534157156944275,1.6049244403839111,-0.9062820672988892,0.32132071256637573,-0.9135532975196838,-0.3545471429824829,3.192783832550049,-0.5482421517372131,-3.459582567214966,1.300764560699463,2.7899205684661865,-1.6017160415649414,-4.44159460067749,1.8422117233276367,0.4554879367351532,-1.2267303466796875,1.0295562744140625,-10.74340534210205,1.4747543334960938,-1.263993740081787,-2.54407000541687,0.6086298227310181,1.1236733198165894,0.7933060526847839,-0.6329255700111389,1.4530467987060547,1.2524008750915527,-1.716599464416504,0.5707257986068726,1.3894702196121216,3.6639347076416016,1.620762825012207,-1.774304986000061,1.4316701889038086,6.010383129119873,-0.33660802245140076,0.4240100681781769,1.7513656616210938,-4.141974925994873,-0.005382290575653315,0.4650399088859558,0.7817758321762085,1.602437973022461,-0.11828815937042236,-1.3563001155853271,-3.2335331439971924,1.9778404235839844,-2.52626633644104,7.93501091003418,2.2306859493255615,-0.4139915704727173,1.913044810295105,-4.632047653198242,-0.01023808028548956,0.8145769238471985,3.4126434326171875;-4.380833625793457,-1.0396734476089478,8.596367835998535,-4.247039318084717,-3.561387300491333,-2.301881790161133,8.935622215270996,-10.350349426269531;1.4622783660888672,-1.554909586906433,2.8908629417419434,-2.5088553428649902,-4.723893165588379,1.3659271001815796,2.232787609100342,-4.699016571044922,3.005829095840454,-0.0425502248108387,3.67881178855896,-0.6406979560852051,-1.1354975700378418,14.283556938171387,-0.42210641503334045,-3.680598258972168,-0.537732720375061,-0.047276247292757034,-1.62543785572052,4.656002998352051,1.1198076009750366,6.764243125915527,1.0370272397994995,2.4542152881622314,-4.33735990524292,-5.454133987426758,2.5352582931518555,1.409523844718933,0.3782668113708496,-1.0625498294830322,2.1447768211364746,-6.228434085845947,2.613476514816284,-3.594196081161499,0.7448059916496277,-1.8097072839736938,1.7169702053070068,3.8751578330993652,1.8226251602172852,2.5254554748535156,13.588454246520996,-9.010255813598633,8.17443561553955,0.7215270400047302,1.3731422424316406,1.2697679996490479,-3.886284828186035,1.4951881170272827,2.2791264057159424,-6.167548656463623,10.41020393371582,-0.2671548128128052,-1.8352407217025757,-0.24437987804412842,-4.518568992614746,1.699565052986145,-3.330554485321045,-6.371518135070801,-3.9081461429595947,0.9419687390327454,-3.1386733055114746,-0.7309856414794922,2.6501903533935547,-0.8472462892532349,-2.7031145095825195,0.24860215187072754,-1.5141404867172241,-5.116081714630127,2.604485511779785,-0.2431344985961914,1.6032639741897583,1.486116886138916;-3.8123278617858887,-10.742483139038086,11.983295440673828,-8.730507850646973,-11.98171615600586,-1.348229169845581,9.812987327575684,-2.246934652328491,4.881857395172119');

        // Pista 3 1-1090
        this.pesos.push('-0.8618161082267761,0.47362208366394043,0.3084736466407776,-1.0647008419036865,4.720367431640625,0.7308865785598755,0.8842021226882935,-3.840095281600952,0.460447758436203,-2.0739967823028564,-0.6131318807601929,0.19129738211631775,-1.3941009044647217,0.29023200273513794,-0.5513449311256409,-0.6695254445075989,-0.3550737798213959,1.1741682291030884,0.033014602959156036,-0.08068566769361496,-0.030607406049966812,2.8544881343841553,-0.20617786049842834,0.5367076992988586,0.42089736461639404,-1.0885952711105347,0.707234799861908,0.6294124126434326,-0.29166698455810547,-0.07139557600021362,1.044698715209961,0.18638017773628235,-0.3449893593788147,3.5782814025878906,0.2375170886516571,1.4006502628326416,0.06714631617069244,-0.6721913814544678,-0.3129330575466156,-0.08993879705667496,-0.5543661713600159,-0.28409162163734436,1.2008707523345947,-0.15146732330322266,0.07843679934740067,-0.26704028248786926,0.9330094456672668,-0.1851245015859604,-0.022885777056217194,0.841852605342865,-0.6374093890190125,0.2813245952129364,-0.4351627826690674,-1.7894072532653809,0.8815601468086243,2.1876184940338135,-0.6757249236106873,0.26813018321990967,-0.9584074020385742,-0.2277890145778656,-0.8546909093856812,0.4042204022407532,-1.5059410333633423,0.35873937606811523,-0.3921281099319458;0.6986933946609497,0.236496701836586,1.7075749635696411,2.2592544555664062,1.9003112316131592;1.4420316219329834,-0.858768880367279,0.676583468914032,-0.0733260065317154,-4.906584739685059,-0.8857629895210266,-0.3860839903354645,0.45061948895454407,0.5320711135864258,0.08099927008152008,-1.0750207901000977,-0.05113024637103081,0.009738181717693806,-1.1962428092956543,2.8716299533843994,-0.20661742985248566,-0.6010689735412598,0.3053962290287018,-0.378677636384964,0.7324467897415161,0.6162853837013245,-0.273162841796875,-1.5890337228775024,-5.455269813537598,-0.20881065726280212,-0.930417001247406,-1.0969253778457642,-4.013991832733154,1.4758633375167847,1.104532241821289,0.9759611487388611,-4.983276844024658,1.5396149158477783,0.7328686714172363,-2.496392250061035,-2.988694667816162,-0.32346341013908386,1.534812569618225,-0.019088629633188248,-0.2332252413034439,3.5899341106414795,6.851287364959717,1.8068078756332397,-1.0583648681640625,0.6279550194740295;0.491748571395874,-1.1851309537887573,-0.6724867224693298,2.671776294708252,-5.055491924285889,-0.6985350251197815,-0.8148943185806274,2.050071954727173,0');

        // Pista 4 1-5926
        this.pesos.push('1.5290502309799194,1.306536316871643,1.0234829187393188,-0.40833228826522827,-1.1083937883377075,-0.42663154006004333,-0.19554287195205688,-1.3421655893325806,-1.2906453609466553,1.7503026723861694,0.15443924069404602,-0.08651186525821686,0.3134661614894867,-0.2764653265476227,0.07328303158283234,-0.24330776929855347,-0.6372962594032288,0.44197356700897217,-0.439810186624527,-0.30853673815727234,0.5250864028930664,-0.18624797463417053,-0.14556828141212463,-0.042804181575775146,0.0902169942855835,0.41797658801078796,0.17025265097618103,0.3651088774204254,-0.33395007252693176,-0.23767733573913574,0.16146612167358398,-0.01644722931087017,0.30940377712249756,-1.8470327854156494,-0.18619407713413239,-0.20335479080677032,0.4305135905742645,0.4811698794364929,0.4522862136363983,-0.2306155413389206,-1.6775001287460327,-0.06626985222101212,-0.42706528306007385,-0.08451768010854721,-0.08946948498487473,0.4820607602596283,-0.1807282418012619,0.07342444360256195,-0.1090107411146164,-0.45861005783081055,-0.07302775979042053,0.11884326487779617,0.07323291152715683,0.15710867941379547,-0.4939337968826294,-0.3983477056026459,0.03249768912792206,0.4112119972705841,-0.1896381974220276,-0.34722718596458435,-0.01000967063009739,0.048793960362672806,0.1331406980752945,0.32413357496261597,0.3793441653251648;-0.3774498701095581,1.972557544708252,1.0104714632034302,0,0;-0.07692037522792816,-0.11368703842163086,0.0017082090489566326,-0.6265668869018555,-1.1269820928573608,-1.0574268102645874,0.16942143440246582,-0.6498032808303833,0.20495419204235077,0.25995171070098877,-0.6725176572799683,1.7722220420837402,-0.07463117688894272,2.6761484146118164,-4.136035919189453,0.1197890043258667,0.8006908893585205,0.5473731160163879,0.6827309727668762,0.05461044982075691,-1.1897257566452026,-0.20670673251152039,-2.6260986328125,2.4060146808624268,0.05693406984210014,-1.6587246656417847,0.4866199493408203,-0.19488731026649475,-0.012593378312885761,3.181408405303955,-0.4726966619491577,2.802320718765259,0.241226926445961,0.2292589247226715,-0.13264517486095428,0.6393523812294006,2.046196460723877,-0.1637272834777832,-1.9086235761642456,0.2983438968658447,0.9578783512115479,0.5518472194671631,0.3907015323638916,1.2107234001159668,-0.4087964594364166;-0.37488043308258057,-2.631866455078125,-3.0219414234161377,0.04613680765032768,1.1130828857421875,-0.023644130676984787,2.183070182800293,-1.4318376779556274,0');

        // Pista 5
        this.pesos.push('0.26264384388923645,-0.2248823642730713,0.4104709327220917,-0.26587235927581787,0.3490575850009918,-0.39163950085639954,0.12259615212678909,-0.3866935074329376,-0.42024457454681396,0.2857610881328583,0.8645992875099182,-0.0677105262875557,0.011375084519386292,-0.8975483775138855,-0.16079093515872955,0.4106284976005554,-0.17184363305568695,1.0370593070983887,0.12429357320070267,0.16218101978302002,-0.0025575614999979734,0.7136989831924438,0.19876456260681152,-0.5781612396240234,-0.6491377353668213,0.36004260182380676,0.16328586637973785,0.11875446140766144,-0.10688193887472153,1.2237746715545654,-0.09656310081481934,-1.6121563911437988,2.812725782394409,-0.3390829861164093,0.7462557554244995,-0.07478600740432739,0.3756572902202606,0.13392429053783417,0.7142283320426941,0.3482201099395752,0.171987846493721,0.27967536449432373,-0.25145986676216125,0.19116376340389252,0.43886619806289673,-0.0014847679995000362,-0.2666916251182556,-0.13780945539474487,-1.158336877822876,-0.04550580307841301,0.4345242977142334,0.23650510609149933,0.0892387181520462,0.09701575338840485,-0.3240014910697937,1.9812124967575073,0.28046944737434387,-0.4913449287414551,-0.3700881600379944,-2.478785514831543,0.49005603790283203,-0.8930944204330444,0.10148978978395462,-0.02701873891055584,-0.020834026858210564,-0.986239492893219,0.1696774661540985,0.12601427733898163,0.05599410831928253,-0.15428029000759125,-0.24524465203285217,0.8355938196182251,0.9573392868041992,-1.9266300201416016,-0.04831754416227341,-0.40453413128852844,-0.025362392887473106,0.08290476351976395,-0.18714097142219543,1.2581748962402344,-2.9447388648986816,-0.059992291033267975,0.1617758870124817,0.3706623613834381,-0.022846616804599762,0.1970614194869995,0.10893082618713379,-0.10176021605730057,-0.23901022970676422,0.19707044959068298,0.2645987272262573,0.5839200019836426,0.15646085143089294,0.4327167272567749,0.04389844462275505,-1.2656440734863281,-0.34875521063804626,0.34276795387268066,0.04240313917398453,0.13944688439369202,-0.15751470625400543,0.15182264149188995,0.3642091453075409,1.1396199464797974,-0.7945265173912048,0.12771202623844147,-0.2457515299320221,0.24794316291809082,-0.19284677505493164,0.23098626732826233,-0.2838391661643982,-0.12507414817810059,-0.3929949700832367,-0.862851619720459,0.5770540833473206,0.09783920645713806,0.1106395348906517,-0.38403981924057007,-0.15904851257801056,1.5317108631134033,0.9838640689849854,-0.1410718858242035,-0.19085943698883057,-0.4187534749507904,-0.4234347343444824,0.3133249282836914,0.40266042947769165,0.19691982865333557,-0.25567108392715454,-0.19797249138355255,-1.7224093675613403,-0.010345354676246643,0.23473642766475677,0.025976108387112617,0.5869455933570862,-0.29194965958595276,0.04239928349852562,0.5601049661636353,-0.015405764803290367,-0.18983213603496552,0.038434527814388275,-0.021426763385534286,-0.5806084871292114,-0.29347583651542664,-0.2179899364709854,-0.007360851392149925,-0.5942792892456055,0.1886412799358368,-2.3484046459198,-0.24366725981235504,-2.5361175537109375,0.04018377885222435,0.011708583682775497,0.8860054612159729,-0.05972641333937645,-0.2669426202774048,0.25456392765045166,-0.32437267899513245,-0.9231393337249756,0.009672325104475021,0.4303830564022064,-0.42780575156211853,0.1151570975780487,0.29491114616394043,-0.21946601569652557,-0.36752358078956604,1.3093494176864624,0.16737300157546997,-0.6072037816047668,0.23868289589881897,0.15602119266986847,0.35736557841300964,-0.3047082722187042,-0.4885641932487488,-0.37578633427619934,1.3865278959274292;0,-2.284705638885498,0,-1.7471345663070679,0,-1.4301660060882568,0,2.539656639099121;-1.1178237199783325,2.229137897491455,0.20508606731891632,0.3041532635688782,-0.45473021268844604,0.08674914389848709,0.6518391370773315,-0.14668966829776764,1.0436586141586304,-0.24654650688171387,-0.5472851991653442,-0.41154733300209045,0.5088735222816467,-0.36610540747642517,0.1691952645778656,0.2608500123023987,0.44885683059692383,0.3630208373069763,3.188413619995117,0.04889487475156784,0.23460105061531067,0.3855609893798828,-0.04978611692786217,1.7515822649002075,0.3524959683418274,-0.45382824540138245,-1.6322845220565796,-0.8174835443496704,0.24437367916107178,0.04751458019018173,-0.15517041087150574,0.13593639433383942,-0.17284247279167175,-0.1945033222436905,-0.28715381026268005,0.3755475878715515,-0.5417128205299377,0.3839554786682129,-0.26116442680358887,-0.4979479908943176,-0.5970050692558289,0.2465270608663559,-0.41389769315719604,0.02247706986963749,0.46889039874076843,0.5254200100898743,0.5964738726615906,-1.2302076816558838,0.4549117088317871,-0.09733645617961884,0.5257800817489624,-0.24951507151126862,-0.05756426230072975,-0.3478344976902008,0.18194209039211273,-0.2726486325263977,1.27130925655365,0.06282922625541687,-0.29803234338760376,0.3262384831905365,-0.8678346872329712,-0.6451218724250793,-0.15887068212032318,-0.35411834716796875,-0.5905461311340332,0.24487300217151642,0.009749396704137325,0.009869375266134739,-0.5271385312080383,0.26509425044059753,0.1877528727054596,0.2794197201728821;0,0,0,0,-0.041771452873945236,0,0.44573432207107544,-1.0951014757156372,0');

        // Pista 6
        this.pesos.push('1.3229777812957764,3.3772287368774414,0.7005923390388489,-0.05608475208282471,-1.3558566570281982,1.5351650714874268,-0.00011290586553514004,1.0626245737075806,0.08819231390953064,2.9974253177642822,2.3144702911376953,2.3201913833618164,-1.1038004159927368,2.253314733505249,-2.870337963104248,1.9592889547348022,-0.5486811995506287,-0.13610967993736267,0.16486762464046478,-0.8290215730667114,-1.5775628089904785,-0.011424906551837921,-0.643483579158783,-0.007668179925531149,0.05484018474817276,0.31735870242118835,0.02587611973285675,-0.1117280125617981,-1.3013806343078613,-0.47171059250831604,-1.518649935722351,0.09672115743160248,1.3274797201156616,-0.17575106024742126,0.6493120789527893,0.6897537708282471,-0.3130420446395874,0.8817152976989746,-0.68528813123703,-0.07434539496898651,1.3171517848968506,-3.632964849472046,-0.3898075819015503,0.9846222996711731,1.1739628314971924,1.2899582386016846,-0.020082084462046623,-1.182587742805481,-1.9415663480758667,0.8900938034057617,-0.20326019823551178,-0.05337204784154892,-0.15117081999778748,1.1475558280944824,0.2004869133234024,-0.6314815878868103,0.6531809568405151,-0.6161296367645264,1.0339791774749756,-0.020540321245789528,0.18262962996959686,0.14441359043121338,-0.5498229265213013,-1.3016630411148071,0.4780113399028778,-1.6612062454223633,-0.31420406699180603,-0.942568302154541,-0.2376827448606491,0.21417202055454254,-1.0536365509033203,1.4567961692810059,-0.18337221443653107,-0.08408510684967041,-0.8469411134719849,-1.013727068901062,0.9276162981987,1.3076540231704712,-0.9746222496032715,0.2344059944152832,1.605248212814331,-0.40485459566116333,0.3177157938480377,-0.5119832754135132,0.378024160861969,-0.20123295485973358,0.12042344361543655,-0.06688317656517029,0.07144952565431595,-0.6274488568305969,-0.27774274349212646,-0.218927264213562,1.145168423652649,0.1421506404876709,1.221480131149292,0.29551073908805847,-0.6916189789772034,-0.39176493883132935,0.2783479690551758,0.7913298010826111,0.2001747339963913,0.23634421825408936,0.38834887742996216,-0.4023599922657013,-0.890005886554718,-2.754788875579834,0.2174185961484909,-0.3465447723865509,0.16688817739486694,-0.7166265845298767,-0.10180824249982834,0.23599018156528473,0.4464564025402069,-0.14159740507602692,0.22259950637817383,-3.299773693084717,0.3294631242752075,-0.1929997056722641,-0.29346615076065063,1.4783276319503784,-0.4490848481655121,-0.5530824065208435,0.779869019985199,0.7974951863288879,-0.17255575954914093,0.519158124923706,-0.07809162884950638,-0.43975257873535156,0.9542723298072815,-0.2153337001800537,-0.09493837505578995,-1.62615168094635,0.7038032412528992,-0.8036648631095886,2.077723741531372,1.5111457109451294,0.9114229083061218,0.5320845246315002,0.49721962213516235,1.0190558433532715,-0.35753679275512695,-0.1977338194847107,-0.6200626492500305,0.4523347020149231,0.10369447618722916,1.6845771074295044,-1.5457804203033447,0.4363076090812683,1.1765552759170532,-0.7257341742515564,-0.45391595363616943,-1.492690086364746,1.3063876628875732,-1.462575912475586,-0.0684361532330513,0.4428396224975586,-0.09250064939260483,-1.6821056604385376,1.9146337509155273,-1.5892010927200317,-2.345355749130249,-0.002752932719886303,-1.1286299228668213,0.4432060420513153,0.28514131903648376,-0.15610714256763458,0.28671377897262573,-0.3532671630382538,-2.2148396968841553,0.09437154233455658,-0.2757589817047119,1.6784626245498657,-0.25865045189857483,-3.529001474380493,1.1483749151229858,-0.18759043514728546;0.38221344351768494,-3.7548093795776367,-0.18924719095230103,-1.8621301651000977,-0.5364366173744202,1.0271002054214478,3.444030523300171,-0.7012357711791992;-1.1165344715118408,-4.467316627502441,-0.23999187350273132,0.6380665898323059,-5.407311916351318,-15.435912132263184,-0.5236417055130005,2.749035120010376,-0.40915828943252563,-0.8569592833518982,4.255655765533447,-0.46589282155036926,8.59890365600586,12.889107704162598,-3.881571054458618,0.09447804093360901,7.55172061920166,0.46220192313194275,0.09166659414768219,-4.140368461608887,-0.5642883777618408,3.4771382808685303,1.119403600692749,-15.838191986083984,0.8805463910102844,-1.4585281610488892,-2.983337879180908,-1.6275745630264282,0.5295390486717224,1.060189962387085,-2.352689504623413,-2.785656213760376,10.200949668884277,0.31764084100723267,1.5626157522201538,-0.07951429486274719,-0.38571521639823914,-1.6781598329544067,0.6164482235908508,-0.19590741395950317,2.4018564224243164,-1.7331327199935913,0.9855950474739075,0.47468551993370056,-0.5718217492103577,-0.36232954263687134,3.605583429336548,-0.5260023474693298,2.6317923069000244,1.9016613960266113,14.743078231811523,2.183363914489746,-0.16566714644432068,-2.2354559898376465,0.43208643794059753,-1.5236274003982544,0.31777289509773254,7.151866912841797,11.726842880249023,-0.6791914701461792,0.08319546282291412,0.6990463733673096,1.8950269222259521,0.2770864963531494,1.7267019748687744,0.5708152055740356,0.457409530878067,7.77824068069458,-4.918962001800537,-2.4011194705963135,19.078540802001953,0.22922012209892273;-3.9199297428131104,-6.194295406341553,-0.41228777170181274,5.834606170654297,19.142086029052734,0.8966294527053833,1.2178304195404053,-3.723332405090332,1.0722932815551758');
    }

    getFirstWeights() {

        let child = new Car('X');
        let pesos;
        if (pesosForcados != undefined) {
            pesos = this.pesos[pesosForcados];
            console.log(`Pesos da pista ${pesosForcados}`);
        } else {
            pesos = this.pesos[pista.selectedPista];
        }

        if (pesos.length > 0) {
            if (world.startWeightSaved) {
                child.ia.setWeightsFromString(pesos, this.shapes);
            }
        }
        cars.push(child);
        this.melhores.push(child);
        this.melhor = child;

        vivos = cars.length;

    }

    nextGeneration() {

        if (!this.melhor) {

            console.log('Primeira geração!')
            zerarFrota();
            this.getFirstWeights();
            return

        }

        this.melhor = this.getMelhorCarro(true);
        this.gotCloserBest = this.getGotCloserBest();

        this.melhores = this.getMothers(this.melhor);
        this.melhores.push(this.melhor);
        this.currentSons = this.makeSons(this.melhor);

        if (this.gotCloserBest > this.recordCloser) {
            this.recordCloser = this.gotCloserBest;
        }

        this.calcColocacao();

        this.saveWeights(this.melhor);

        console.log(`G${addZero(nGeracao + 1)} (${getHourMin()}) km: ${this.melhor.lap} - ${this.melhor.km} M: ${this.melhor.marca} R: ${this.melhor.ranhurasColetadas.length} ID: ${this.melhor.id} CARS: ${cars.length} Perto: ${addZero(this.gotCloserBest)} ${(this.gotCloserBest / cars.length * 100).toFixed(0)}% Muts: ${this.melhor.ia.mutated} NM: ${this.melhor.ia.mutatedNeurons}`);

        if (this.melhor.ranhurasColetadas.length > record) {
            foo.speak(`Atingiu ${this.melhor.ranhurasColetadas.length}!`);
            record = this.melhor.ranhurasColetadas.length;
        }

        if (this.brokeRecord({ melhor: this.melhor })) {

            pista.recordKm = this.melhor.km;
            pista.recordLap = this.melhor.lap;
            pista.recordRanhuras = this.melhor.ranhurasColetadas.length;

            if (nGeracao > 0) {
                foo.speak(`${pista.recordKm.toFixed(0)}`);
                this.melhor.ia.showWeights();
            }
        }

        evolucao.push(this.melhor);
        zerarFrota();

        pista.make();

        nGeracao++;
        hue = 0;

        // Adiciona os filhos do casamento.
        for (const son of this.currentSons) {
            let child = new Car('s', true, true, false);
            child.ia.setWeightsFromString(son, this.shapes);
            cars.push(child);
        }

        // Adiciona os filhos do casamento mutados.
        for (const son of this.currentSons) {
            let child = new Car('y', true, true, false);
            child.ia.setWeightsFromString(son, this.shapes);
            child.mutate(Number(random(0.01, 0.015).toFixed(15)), 6);
            cars.push(child);
        }


        const weights = this.melhor.ia.model.getWeights();

        const weightCopies = [];
        for (let i = 0; i < weights.length; i++) {
            weightCopies[i] = weights[i].clone();
        }

        // Clonado e mutado.
        for (let i = 1; i < (quantidade / 3) * 0; i++) {

            let child = new Car('m', true, true, false);
            child.ia.model.setWeights(weightCopies);
            child.mutate(Number(random(0.01, 0.015).toFixed(15)), 4);
            cars.push(child);

        }

        // Clonado e mutado.
        for (let i = 1; i < (quantidade / 3) * 3; i++) {

            let child = new Car('m', true, true, false);
            child.ia.model.setWeights(weightCopies);
            child.mutate(Number(random(0.01, 0.015).toFixed(15)), 20);
            cars.push(child);

        }

        // Clonado (elitismo)
        if (elitism) {

            let child = new Car('c');
            child.ia.model.setWeights(weightCopies);
            cars.push(child);
        }

        vivos = cars.length;

    }

    brokeRecord({ melhor }) {

        let broke = false;

        if (melhor.lap > pista.recordLap) {
            broke = true;
        } else if (melhor.lap == pista.recordLap) {
            if (melhor.km < pista.recordKm) {
                broke = true;
            }
        }

        return broke;

    }

    setFlag() {

        if (showFlag) {
            if (pista) {
                const tmpMelhor = this.getMelhorCarro();
                if (tmpMelhor) {
                    pista.setFlag(tmpMelhor.pos.x, tmpMelhor.pos.y, tmpMelhor.km);
                    this.melhorCorrente = tmpMelhor;
                }
            }
        }

    }

    getQuemMaisDeuReh(qtd) {

        console.log(`Primeiro: ${colocacao[0].km}`);

        let maiorReh = 0;
        let maiorI = 0;

        for (let i = 0; i < min(qtd, colocacao.length); i++) {

            car = colocacao[i];

            console.log(`${i}:  ${colocacao[i].km} -> ${colocacao[i].qtdReh}`);

            if (car.km > 0) {
                if (myRelu(colocacao[i].qtdReh) > maiorReh) {

                    maiorReh = myRelu(colocacao[i].qtdReh);
                    maiorI = i;
                }
            }
        }

        console.log('******* Maior ré é ->', colocacao[maiorI].qtdReh, ' km ', colocacao[maiorI].km, ' i: ', maiorI);
        return colocacao[maiorI];

    }

    getGotCloserBest() {

        let qtd = 0;

        if (this.melhor) {
            for (const car of cars) {
                if (this.melhor.id != car.id) {
                    if (abs(this.melhor.km - car.km) < 100) {
                        qtd++;
                    }
                }
            }
        }

        return qtd;

    }

    getMelhorCarro(isEnd) {

        let best = new Car('new');

        for (const car of cars) {
            if (car.ranking() > best.ranking()) {
                best = car;
            }
        }

        return best;

    }

    funcSalvarMelhorCarro(melhor) {
        if (salvarMelhorCarro) {
            // localStorage.setItem('meuGato', 'Tom');

            // document.cookie = "username=ivan; expires=Thu, 18 Dec 2025 12:00:00 UTC; path=/";

            // try {
            //     console.log('Salvando carro... ', this.melhor.marca);
            //     await this.melhor.ia.model.save('indexeddb://caria-melhor');
            //     console.log('Salvo');
            //     // await this.melhor.ia.model.save('localstorage://caria-melhor');
            // } catch (err) {
            //     console.error(err);
            // }
        }
    }

    funcCarregarCarroSalvo() {
        if (carregarCarroSalvo) {
            // console.log(' leitura: ',localStorage.getItem('meuGato'));
            // console.log('cookie => ',document.cookie);
            // try {

            //     console.log('Carregando carro salvo...');
            //     const melhorSalvo = await tf.loadLayersModel('indexeddb://caria-melhor');

            //     let child = new Car('X');
            //     child.ia.model = null;
            //     child.ia.model = melhorSalvo
            //     cars.push(child);

            // } catch (err) {
            //     console.error(err);
            // }
            // melhorCarregado = true;
            // console.log('Carregado!')
        }

    }
    saveWeights(car) {
        const w = car.ia.showWeights(true);
        localStorage.setItem('melhor', w);
    }

    calcColocacao() {

        cars.sort((a, b) => (a.ranking() < b.ranking() ? 1 : -1));

        // for (let i = 0; i < min(cars.length,7); i++) {
        //     const car = cars[i];
        //     console.log(`${i+1}: LAP: ${car.lap} KM: ${car.km} MUT: ${car.ia.mutated} VM: ${car.getAverageSpeed().toFixed(4)} ID: ${car.id}`);
        // }

    }

    makeSons(melhor) {

        const sons = [];
        const mothers = this.getMothers(melhor);
        const dad = melhor.ia.showWeights(true);

        for (const mother of mothers) {

            const mom = mother.ia.showWeights(true);
            sons.push(this.makeSon(dad, mom));

        }

        return sons;

    }

    makeSon(father = '', mother = '') {

        const aFather = father.split(';');
        const aMother = mother.split(';');
        let son = 'i';

        for (let i = 0; i < aFather.length; i++) {

            const anFather = aFather[i].split(',').map((e) => { return Number(e) });
            const anMother = aMother[i].split(',').map((e) => { return Number(e) });
            son += ";";

            for (let i = 0; i < anFather.length; i++) {
                const f = anFather[i];
                const m = anMother[i];
                son += ",";
                son += (f + m) / 2;
            }

        }

        son = son.replace(/i;,/g, '');
        son = son.replace(/;,/g, ';');

        return son;

    }

    getMothers(melhor) {

        let mothers = [];

        for (const car of cars) {

            if (melhor.km !== car.km) {
                if (abs(melhor.km - car.km) < 100) {
                    mothers.push({ ...car });
                    if (mothers.length > 1) break;
                }
            }

        }

        return mothers;

    }

}